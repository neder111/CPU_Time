import time

def handle_spoof(self, mac, msg):
    actions = []
    in_port = msg.match['in_port']
    datapath = msg.datapath
    ofproto = datapath.ofproto
    parser = datapath.ofproto_parser
    inst = [parser.OFPInstructionActions(ofproto.OFPIT_CLEAR_ACTIONS, [])]
    match = parser.OFPMatch(in_port=in_port)

    # Record the detection time
    detection_time_ms = int(time.time() * 1000)

    mod = parser.OFPFlowMod(datapath=datapath, match=match, idle_timeout=60, hard_timeout=60, priority=20, instructions=inst)
    datapath.send_msg(mod)
    self.logger.info("\033[1;31m" + "Installed an entry to drop all the packets from port %s " + "\033[0m", in_port)

    # Calculate the time difference
    current_time_ms = int(time.time() * 1000)
    detection_duration_ms = current_time_ms - detection_time_ms
    self.logger.info("Detection time: %s ms", detection_duration_ms)
